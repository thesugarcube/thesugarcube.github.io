/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
html, body {
  background-image: url(../images/witewall_3.png);
  font-family: Tahoma, Verdana, Segoe, sans-serif;
  color: #5b5b5b; }

a {
  text-decoration: none;
  color: inherit; }

.wrapper {
  *zoom: 1;
  width: auto;
  max-width: 1410px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0; }
  .wrapper:before, .wrapper:after {
    content: '';
    display: table; }
  .wrapper:after {
    clear: both; }

.navbar {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 22.75%;
  margin-left: 0%;
  margin-right: 3%; }
  .navbar:before, .navbar:after {
    content: '';
    display: table; }
  .navbar:after {
    clear: both; }
  .navbar:last-child {
    margin-right: 0%; }
  .navbar img, .navbar ul, .navbar a, .navbar li {
    *zoom: 1;
    width: auto;
    max-width: 320;
    float: none;
    display: block;
    margin-right: auto;
    margin-left: auto;
    padding-left: 0;
    padding-right: 0; }
    .navbar img:before, .navbar img:after, .navbar ul:before, .navbar ul:after, .navbar a:before, .navbar a:after, .navbar li:before, .navbar li:after {
      content: '';
      display: table; }
    .navbar img:after, .navbar ul:after, .navbar a:after, .navbar li:after {
      clear: both; }
  .navbar ul {
    list-style-type: none; }
    .navbar ul a {
      margin-left: 4%;
      border-left: transparent solid 10px;
      transition: all 0.2s; }
      .navbar ul a:hover {
        border-left: #7b4 solid 10px;
        color: #252525;
        margin-left: 0; }
      .navbar ul a li {
        font-family: 'Roboto Condensed', sans-serif;
        font-size: 2.4em;
        font-weight: 700;
        padding: 2%;
        margin-left: 2%; }
  .navbar span {
    margin-left: 9%; }
    .navbar span .fa-circle {
      color: #3b5998; }
    .navbar span .fa-facebook {
      color: #fff; }
    .navbar span:hover .fa-circle {
      color: #4c6aa9; }

.section {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 74.25%;
  margin-left: 0%;
  margin-right: 3%; }
  .section:before, .section:after {
    content: '';
    display: table; }
  .section:after {
    clear: both; }
  .section:last-child {
    margin-right: 0%; }
  .section p {
    font-family: 'Roboto', sans-serif;
    font-weight: 300;
    line-height: 1.4;
    margin-bottom: -0.8em; }
    .section p::before {
      content: '';
      padding-left: 2.5em; }
    .section p.name {
      text-align: right;
      padding-left: 0; }

h1.title {
  margin-top: 3%;
  margin-bottom: 3%;
  text-align: center;
  font-family: 'Tangerine', cursive;
  font-size: 5.5em;
  font-weight: 400; }
  h1.title sugar {
    color: #62d5ea;
    font-weight: 700;
    font-size: 1.2em; }

h2 {
  font-family: 'Oswald', sans-serif;
  font-size: 2.5em;
  font-weight: 400; }
  h2.subtitle {
    color: #3b3b3b;
    text-align: right;
    margin-bottom: -0.5em; }
  h2.call i {
    padding-right: 4%;
    color: #54acc1; }
  h2.call span {
    font-family: 'Roboto'; }
  h2.email i {
    padding-right: 4%;
    color: #54acc1; }
  h2.email span {
    font-family: 'Roboto'; }

h3 {
  font-family: 'Roboto', sans-serif;
  font-weight: 500;
  font-style: italic; }
  h3.subheading {
    color: #7b7b7b;
    text-align: right; }

.index-description {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 31.33333%;
  margin-left: 17.16667%;
  margin-right: 3%;
  font-family: 'Roboto';
  font-weight: 300;
  font-size: 2em;
  color: #6f6f6f; }
  .index-description:before, .index-description:after {
    content: '';
    display: table; }
  .index-description:after {
    clear: both; }
  .index-description:last-child {
    margin-right: 0%; }
  .index-description .description-em {
    font-family: 'Roboto Condensed'; }
  .index-description .timings {
    margin-top: 1.5em; }
    .index-description .timings .fa {
      color: #838383; }
    .index-description .timings .days {
      font-size: 0.65em;
      margin-left: 0.07em; }

.bx-wrapper {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 31.33333%;
  margin-left: 0%;
  margin-right: 3%; }
  .bx-wrapper:before, .bx-wrapper:after {
    content: '';
    display: table; }
  .bx-wrapper:after {
    clear: both; }
  .bx-wrapper:last-child {
    margin-right: 0%; }
  .bx-wrapper ul {
    margin-top: 0; }
  .bx-wrapper .bx-prev {
    background: url(../images/slideshow/controls.png) no-repeat 0 -32px;
    opacity: 0.5; }
  .bx-wrapper .bx-next {
    background: url(../images/slideshow/controls.png) no-repeat -43px -32px;
    opacity: 0.5; }
  .bx-wrapper .bx-loading {
    background: url(../images/slideshow/bx_loader.gif) center center no-repeat #fff; }

.bx-wrapper, .bx-viewport, .bx-wrapper img {
  height: 500px !important; }

.map {
  *zoom: 1;
  width: auto;
  max-width: 1410px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  border: 5px #fff solid;
  box-shadow: 0 0 5px #ccc; }
  .map:before, .map:after {
    content: '';
    display: table; }
  .map:after {
    clear: both; }

#enquiry-form * {
  padding-top: 3px; }
#enquiry-form .ss-required-asterisk {
  color: #e02b2b;
  font-weight: 900; }
#enquiry-form input[type="text"] {
  padding: 5px 5px;
  line-height: 1.33;
  width: 250px;
  border-radius: 3px;
  background-color: #ffffff;
  color: #848484;
  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  border: 1px solid #cccccc;
  height: 35px; }
  #enquiry-form input[type="text"]:focus {
    border-color: #66afe9;
    outline: 0;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
    outline-offset: -2px; }
#enquiry-form input[type="submit"] {
  background-color: #428bca;
  border: 1px solid #357ebd;
  color: #ffffff;
  padding: 6px 12px; }
  #enquiry-form input[type="submit"]:active {
    outline: 0; }
  #enquiry-form input[type="submit"]:focus {
    outline-offset: -2px; }
  #enquiry-form input[type="submit"]:hover {
    background-color: #3071a9;
    border-color: #285e8e; }
#enquiry-form textarea {
  padding: 5px 5px;
  line-height: 1.33;
  width: 60%;
  border-radius: 3px;
  background-color: #ffffff;
  color: #848484;
  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  border: 1px solid #cccccc; }
  #enquiry-form textarea:focus {
    border-color: #66afe9;
    outline: 0;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
    outline-offset: -2px; }

#menu {
  margin-top: -2em;
  text-align: center; }
  #menu .menu-section {
    font-family: 'Inconsolata', monospace;
    font-weight: 700;
    color: #eb4679;
    letter-spacing: 0.1em;
    margin-top: 1.5em; }
  #menu hr {
    width: 15%;
    height: 0.3em;
    color: #eb4679;
    background-color: #eb4679;
    border: 0 none;
    margin-top: -1em;
    margin-bottom: 2.5em; }
  #menu .item-title {
    font-family: 'Inconsolata', monospace;
    font-style: normal;
    color: 5b5b5b;
    margin-bottom: -1em; }
  #menu .item-description {
    font-family: 'Roboto', sans-serif;
    font-weight: 100;
    margin-bottom: 2.2em; }
  #menu .item-list {
    font-family: 'Roboto', sans-serif;
    font-weight: 100;
    margin-bottom: -1em;
    margin-top: 1.4em; }
  #menu .item-list-title {
    margin-top: 3em; }

/*# sourceMappingURL=styles.css.map */
